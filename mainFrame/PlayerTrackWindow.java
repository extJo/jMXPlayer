/**
 * jMXPlayer, a GUI to IEEE PAR1599 (MX) data
 * Copyright Â© 2010 Riccardo Attilio Galli <riccardo@sideralis.org>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * PlayerTrackWindow.java
 *
 * a window to show the current status of a media
 *
 */

package mainFrame;

import javax.media.Player;
import javax.swing.ButtonModel;
import javax.swing.JSlider;
import javax.swing.JToggleButton;

/**
 *
 * @author  Riquito
 */
public class PlayerTrackWindow extends javax.swing.JFrame {
    private Player player;
    
    /** Creates new form PlayerTrackWindow 
     */
    public PlayerTrackWindow() {
        
        initComponents();
        
        this.buttonGroup1.add(this.playToggleBtn);
        this.buttonGroup1.add(this.pauseToggleBtn);
        this.buttonGroup1.add(this.stopToggleBtn);
    }
    
    public void setPlayer(Player newPlayer){
        this.player=newPlayer;
    }
    
    /*select one of 3 buttons based on value of text
     text must be one of
     - play
     - pause
     - stop
     
     */
    public void selectButton(String text){
        ButtonModel model=null;
        
        if (text.compareTo("play")==0){
            model=this.playToggleBtn.getModel();
        }
        else if (text.compareTo("pause")==0){
            model=this.pauseToggleBtn.getModel();
        }
        else if (text.compareTo("stop")==0){
            model=this.stopToggleBtn.getModel();
        }
        
        this.buttonGroup1.setSelected(model,true);
    }
    
    
    
    public JSlider getSlider(){
        return this.jSlider1;
    }
    
    public JToggleButton getPlayBtn(){
        return this.playToggleBtn;
    }
    
    public JToggleButton getPauseBtn(){
        return this.pauseToggleBtn;
    }
    
    public JToggleButton getStopBtn(){
        return this.stopToggleBtn;
    }
    
    /*set the maximum value of the slider*/
    public void setTrackLength(int seconds){
        this.jSlider1.setMaximum(seconds);
    }
    
    /*return the track time based on the actual position
      of the cursor on the slider.
      It's in seconds, so absolutely _not_ accurate
     */
    public int getTrackTime(){
        return this.jSlider1.getValue();
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSlider1 = new javax.swing.JSlider();
        playToggleBtn = new javax.swing.JToggleButton();
        pauseToggleBtn = new javax.swing.JToggleButton();
        stopToggleBtn = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Current track");
        jSlider1.setMajorTickSpacing(30);
        jSlider1.setMinorTickSpacing(10);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setValue(0);
        jSlider1.setEnabled(false);

//        playToggleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mainFrame/Resources/Play24.gif")));
        playToggleBtn.setText("play");
        playToggleBtn.setEnabled(false);
        playToggleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                on_audioBtn_clicked(evt);
            }
        });

//        pauseToggleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mainFrame/Resources/Pause24.gif")));
        pauseToggleBtn.setText("pause");
        pauseToggleBtn.setEnabled(false);
        pauseToggleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                on_audioBtn_clicked(evt);
            }
        });

//        stopToggleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mainFrame/Resources/Stop24.gif")));
        stopToggleBtn.setText("stop");
        stopToggleBtn.setSelected(true);
        stopToggleBtn.setEnabled(false);
        stopToggleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                on_audioBtn_clicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(stopToggleBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(playToggleBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pauseToggleBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSlider1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pauseToggleBtn)
                    .add(playToggleBtn)
                    .add(stopToggleBtn)
                    .add(jSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void on_audioBtn_clicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_on_audioBtn_clicked
        this.buttonGroup1.setSelected(((JToggleButton)evt.getSource()).getModel(),true);
    }//GEN-LAST:event_on_audioBtn_clicked

/*Starts to play a song */    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JToggleButton pauseToggleBtn;
    private javax.swing.JToggleButton playToggleBtn;
    private javax.swing.JToggleButton stopToggleBtn;
    // End of variables declaration//GEN-END:variables
    
}
